@*
    Archivo Razor cshtml

    Define como se muestra la interfaz de usuario UI de la aplicacion
    usamos un Modelo que es la union de dos Modelos (Tabla animestest como tabla temporadadasTest )
    para mostrarlo como un join conjunto



    El archivo que se envia al cliente es un archivo html, generado por asp net core

    recorremos la lista de Animes y lo mostramos.
    animesTemporadasViewModels es una Lista y el indice [0] contiene el nombre de las columnas de la tabla de la base de
    datos que junto con el modelo en la propiedad DisplayName
    se muestra de manera mas amigable al usuario

    DisplayFor muestra el contenido de la lista
*@


@page
@using Models
@model AnimesTemporadasModel
@{
    ViewData["Title"] = "Lista Animes Temporadas";

}

<div class="row d-flex justify-content-between">

    <div class="col-6">
        <h4>Lista AnimesTemporadas.cshtml</h4>
    </div>
    @* <div class="col-6 text-right">
        <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#exampleModal"
        data-backdrop="static" data-keyboard="false">Añadir</button>
        </div> *@

    <div class="col-6 d-flex">
        <a class="btn  btn-primary mr-3" asp-page="CrearAnimeTemporada">Añadir Anime y 1º Temporada</a>
        <a class="btn  btn-success text-white" asp-page="Temporadas">Añadir Temporada a Anime existente</a>
    </div>
</div>

<div class="row d-flex justify-content-center">

    <div class="col-6">
        <p> Los Animes que tienen un guion - <b>No tienen temporadas</b></p>
    </div>

</div>
 
<section class="row ">

    <table class="table  table-striped  " id="tablaAnimes">
        <thead class="table-dark">
            <tr>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.animesTemporadasPaginated[0].id_anime)
                </th>



                <th scope="col">
                    @Html.DisplayNameFor(model => model.animesTemporadasPaginated[0].NumeroTemporada)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.animesTemporadasPaginated[0].NombreAnimeTemporada)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.animesTemporadasPaginated[0].genero)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.animesTemporadasPaginated[0].nombreEnIngles)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.animesTemporadasPaginated[0].estado)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.animesTemporadasPaginated[0].tipo)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.animesTemporadasPaginated[0].temporada_estreno)
                </th>
                <th scope="col" colspan="3" class="text-center">
                    Acciones
                </th>


            </tr>
        </thead>
        <tbody>
            @foreach (var animetemporadasjuntos in Model.animesTemporadasPaginated)
            {

                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => animetemporadasjuntos.id_anime)
                    </td>

                    @if (animetemporadasjuntos.NumeroTemporada == null)
                    {
                        <td>
                            <i>-</i>
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.DisplayFor(modelItem => animetemporadasjuntos.NumeroTemporada)
                        </td>
                    }


                    <td>
                        @Html.DisplayFor(modelItem => animetemporadasjuntos.NombreAnimeTemporada)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => animetemporadasjuntos.genero)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => animetemporadasjuntos.nombreEnIngles)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => animetemporadasjuntos.estado) 

                  
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => animetemporadasjuntos.tipo)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => animetemporadasjuntos.temporada_estreno)
                    </td>
                    <td>
                        <a class="btn btn-sm btn-warning" asp-page="./EditarTemporada"
                        asp-route-temporadaId="@animetemporadasjuntos.id_temporada"
                        asp-route-AnimeId="@animetemporadasjuntos.id_anime">Editar Info Temporada</a>
                    </td>

                    <td>
                        <a href="#" class="btn btn-sm btn-danger">Eliminar</a>
                    </td>

                    <td>
                        <a asp-page="/Historial" asp-route-id="@animetemporadasjuntos.id_anime"
                        class="btn btn-sm btn-secondary">Ver Histórico</a>
                    </td>
                </tr>
            }



        </tbody>
    </table>
    @{
        var prevDisabled = !Model.animesTemporadasPaginated.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.animesTemporadasPaginated.HasNextPage ? "disabled" : "";
    }

    <a asp-page="./AnimesTemporadas" asp-route-pageIndex="@(Model.animesTemporadasPaginated.PageIndex - 1)"
        class="btn btn-primary @prevDisabled mr-3">
        Anterior
    </a>
    <a asp-page="./AnimesTemporadas" asp-route-pageIndex="@(Model.animesTemporadasPaginated.PageIndex + 1)"
        class="btn btn-primary @nextDisabled">
        Siguiente
    </a>

</section>

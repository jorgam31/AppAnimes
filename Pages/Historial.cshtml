@page "{id:int?}"
@model Pages.HistorialModel
@{
    ViewData["Title"] = "Historial";
}

@* Si ViewData["Id"] no es nulo he dado click en ver historico anime en la pagina de temporadas y filtro solo por ese anime.*@
@if (ViewData["id"] != null && ViewData["NumeroTemporada"] != null)
{
    <div class="row">
        <div class="col">
            <h3>Histórico del Anime @ViewData["nombreAnimeFiltrado"]</h3>
            <h4>y todas sus temporadas</h4>
        </div>
    </div>
}
else if (ViewData["id"] != null && ViewData["NumeroTemporada"] == null)
{
    <h3>Historial de la Pelicula @ViewData["nombreAnimeFiltrado"]</h3>
}
else
{
    <h3>Historial</h3>
}

<div class="row">
    @*Cuadro busqueda*@
    <div class="col">
        <div class="col-6">
            <p>Los Animes que tienen un guion - <b>No tienen temporadas</b> porque son pelis.</p>
        </div>
        <form>
            <p style="display:inline;">Buscar Anime: <input type="text" asp-for="searchString" /></p>
            <input type="submit" value="Buscar" />
        </form>
    </div>
</div>
<table class="table table-striped table-sm">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(h => h.HistorialAnimesTemporadasPaginated[0].idHistorial)
            </th>
            <th>

                @Html.DisplayNameFor(h => h.HistorialAnimesTemporadasPaginated[0].NumeroTemporada)
            </th>
            <th>
                @Html.DisplayNameFor(h => h.HistorialAnimesTemporadasPaginated[0].NombreAnimeTemporada)
            </th>
            <th>
                @Html.DisplayNameFor(h => h.HistorialAnimesTemporadasPaginated[0].fechaInicio)
            </th>
            <th>
                @Html.DisplayNameFor(h => h.HistorialAnimesTemporadasPaginated[0].fechaFin)
            </th>
            <th>
                @Html.DisplayNameFor(h => h.HistorialAnimesTemporadasPaginated[0].VistoEn)
            </th>
            <th>
                @Html.DisplayNameFor(h => h.HistorialAnimesTemporadasPaginated[0].AnyoVisto)
            </th>

        </tr>
    </thead>
    <tbody>
        @if (Model.HistorialAnimesTemporadasPaginated.ToList().Count == 0)
        {
            <tr col=5>
                <td colspan="5" class="text-center"> No Hay Registros</td>
            </tr>
        }
        else
        {

            @foreach (var registroHistorial in Model.HistorialAnimesTemporadasPaginated)
            {

                <tr>
                    <td>
                        @Html.DisplayFor(m => registroHistorial.idHistorial)
                    </td>
                    <td>
                        @if (registroHistorial.NumeroTemporada == null)
                        {
                            @("-") @* Al ser pelicula no tiene numero de temporada mostramos un guion*@
                        }
                        else
                        {
                            @Html.DisplayFor(m => registroHistorial.NumeroTemporada)

                        }
                    </td>

                    @* Si el nombre del anime es muy largo lo acortamos se puede ver completo si el usuario pone encima el cursor*@
                    @if (registroHistorial.NombreAnimeTemporada.ToCharArray().Count() > 30)
                    {


                        <td>
                            @{
                                var nombre = registroHistorial.NombreAnimeTemporada;
                                string cadena =  "<span data-bs-toggle=\"tooltip\" data-delay='{\"show\":\"0\", \"hide\":\"1800\"}'  data-bs-placement=\"top\" title=\" " + nombre +" \" >";
                                @Html.Raw(cadena + registroHistorial.NombreAnimeTemporada.Substring(0, 20) + "... </span>")
                            }

                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.DisplayFor(m => registroHistorial.NombreAnimeTemporada)
                        </td>
                    }


                    <td>
                        @if(registroHistorial.fechaInicio == null && registroHistorial.fechaFin == null && registroHistorial.AnyoVisto != 0){
                            @("Desconocida")
                        }
                        else{
                          @Html.DisplayFor(m => registroHistorial.fechaInicio)

                        }
                    </td>
                    
                    <td>
                        @if (registroHistorial.fechaInicio == null && registroHistorial.fechaFin == null && registroHistorial.AnyoVisto != 0){
                               
                                @("Desconocida")
                        }
                        else if(registroHistorial.fechaFin != null){
                            @Html.DisplayFor(m => registroHistorial.fechaFin)
                        }
                        else{
                            <text>Actualmente viendo.</text>
                        }
                      
                    </td>

                    <td>
                        @if (registroHistorial.VistoEn == null)
                        {
                            @("-")
                        }
                        else
                        {
                            @Html.DisplayFor(m => registroHistorial.VistoEn)
                        }
                    </td>

                    <td>
                       
                            @Html.DisplayFor(m => registroHistorial.AnyoVisto)
                        
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HistorialAnimesTemporadasPaginated.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HistorialAnimesTemporadasPaginated.HasNextPage ? "disabled" : "";
}

<a asp-page="./Historial"
   asp-route-pageIndex="@(Model.HistorialAnimesTemporadasPaginated.PageIndex - 1)"
   class="btn btn-outline-primary @prevDisabled">
    Anterior
</a>

<a asp-page="./Historial"
   asp-route-pageIndex="@(Model.HistorialAnimesTemporadasPaginated.PageIndex +1)"
   class="btn btn-outline-primary @nextDisabled">
    Siguiente
</a>
<div class="d-block pt-4">
    <a asp-page="AnimesTemporadas" class="btn btn-primary">Volver</a>
</div>

@section scripts{
    <script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    });
    

</script>
}
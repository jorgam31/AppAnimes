// <auto-generated />
using System;
using AppAnimes.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppAnimes.Migrations
{
    [DbContext(typeof(AppAnimesDBContext))]
    [Migration("20210412120009_MigracionAnimesDBInicial")]
    partial class MigracionAnimesDBInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppAnimes.Models.Animes", b =>
                {
                    b.Property<int>("IdAnime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_anime")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genero")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("genero");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreEnIngles")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_en_ingles");

                    b.HasKey("IdAnime");

                    b.ToTable("Animes");
                });

            modelBuilder.Entity("AppAnimes.Models.AnimesHistoricoVistaAppAnimesDB", b =>
                {
                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio");

                    b.Property<DateTime?>("FechaPausa")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_pausa");

                    b.Property<int>("IdHistorial")
                        .HasColumnType("int")
                        .HasColumnName("id_historial");

                    b.Property<int>("IdTemp")
                        .HasColumnType("int")
                        .HasColumnName("id_temp");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(756)
                        .IsUnicode(false)
                        .HasColumnType("varchar(756)")
                        .HasColumnName("nombre");

                    b.ToView("AnimesHistoricoVista");
                });

            modelBuilder.Entity("AppAnimes.Models.Historial", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_historial")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio");

                    b.Property<DateTime?>("FechaPausa")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_pausa");

                    b.Property<int>("IdAnime")
                        .HasColumnType("int")
                        .HasColumnName("id_anime");

                    b.Property<int>("IdTemp")
                        .HasColumnType("int")
                        .HasColumnName("id_temp");

                    b.Property<string>("VistoEn")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("visto_en");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdAnime");

                    b.ToTable("Historial");
                });

            modelBuilder.Entity("AppAnimes.Models.Temporadas", b =>
                {
                    b.Property<int>("IdAnime")
                        .HasColumnType("int")
                        .HasColumnName("id_anime");

                    b.Property<int?>("IdTemporada")
                        .HasColumnType("int")
                        .HasColumnName("id_temporada");

                    b.Property<string>("Estado")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("estado");

                    b.Property<string>("NombreTemporada")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre_temporada");

                    b.Property<string>("TemporadaEstreno")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("temporada_estreno");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("IdAnime", "IdTemporada");

                    b.ToTable("Temporadas");
                });

            modelBuilder.Entity("AppAnimes.Models.Historial", b =>
                {
                    b.HasOne("AppAnimes.Models.Animes", "IdAnimeNavigation")
                        .WithMany("Historial")
                        .HasForeignKey("IdAnime")
                        .HasConstraintName("FK_historial_animes")
                        .IsRequired();

                    b.Navigation("IdAnimeNavigation");
                });

            modelBuilder.Entity("AppAnimes.Models.Temporadas", b =>
                {
                    b.HasOne("AppAnimes.Models.Animes", "IdAnimeNavigation")
                        .WithMany("Temporadas")
                        .HasForeignKey("IdAnime")
                        .HasConstraintName("FK_temporadas_animes")
                        .IsRequired();

                    b.Navigation("IdAnimeNavigation");
                });

            modelBuilder.Entity("AppAnimes.Models.Animes", b =>
                {
                    b.Navigation("Historial");

                    b.Navigation("Temporadas");
                });
#pragma warning restore 612, 618
        }
    }
}
